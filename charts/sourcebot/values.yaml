# Sourcebot Helm Chart Values

global:
  security:
    # -- Allow insecure images to use bitnami legacy repository. Can be set to false if secure images are being used (Paid).
    allowInsecureImages: true

# -- Override the name for the selector labels, defaults to the chart name
nameOverride: ""

# -- Override the full name of the deployed resources, defaults to a combination of the release name and the name for the selector labels
fullnameOverride: ""

# Core Sourcebot Configuration
sourcebot:
  # -- Set the number of replicas for the deployment
  replicaCount: 1

  # Image configuration
  image:
    # -- Container image repository
    repository: ghcr.io/sourcebot-dev/sourcebot
    # -- Container image tag. Falls back to appVersion if not set.
    tag: ""
    # -- Container image digest (used instead of tag if set)
    digest: ""
    # -- Image pull policy
    pullPolicy: IfNotPresent
    # -- Configure image pull secrets for private registries
    pullSecrets: []

  # -- Override the default command of the container
  command: []

  # -- Override the default arguments of the container
  args: []

  # License configuration
  license:
    # -- License key value (or use existingSecret)
    value: ""
    # -- Use an existing secret for the license key
    existingSecret: ""
    # -- Key in the existing secret that contains the license key
    existingSecretKey: key

  # -- Set environment variables from Kubernetes secrets
  additionalEnvSecrets: []
  # - secretName: sourcebot-github-token
  #   secretKey: token
  #   envName: GITHUB_TOKEN

  # -- Set additional environment variables
  additionalEnv: []
  # - name: SOURCEBOT_TELEMETRY_DISABLED
  #   value: "1"

  # -- Configure Sourcebot-specific application settings
  config:
    # Schema version of the Sourcebot configuration
    $schema: https://raw.githubusercontent.com/sourcebot-dev/sourcebot/main/schemas/v3/index.json
    connections: {}
    # github-repos:
    #   type: github
    #   token:
    #     env: GITHUB_TOKEN
    #   repos:
    #     - sourcebot/sourcebot
    settings: {}
    # reindexIntervalMs: 86400000
    # enablePublicAccess: true

  # ServiceAccount configuration
  serviceAccount:
    # -- Create a new ServiceAccount
    create: true
    # -- Use an existing ServiceAccount (if set)
    name: ""
    # -- Add annotations to the ServiceAccount
    annotations: {}
    # -- Enable or disable automatic ServiceAccount mounting
    automount: false

  # -- Set the pod-level security context
  podSecurityContext: {}
  # runAsUser: 1000
  # runAsGroup: 1000
  # runAsNonRoot: true
  # fsGroup: 1000

  # -- Set the container-level security context
  containerSecurityContext: {}
  # allowPrivilegeEscalation: false
  # privileged: false
  # readOnlyRootFilesystem: true
  # runAsUser: 1000
  # runAsGroup: 1000
  # capabilities:
  #   drop:
  #     - ALL
  # seccompProfile:
  #   type: RuntimeDefault

  # Service configuration
  service:
    # -- Type of the Kubernetes service (e.g., ClusterIP, NodePort, LoadBalancer)
    type: ClusterIP
    # -- Internal container port
    containerPort: 3000
    # -- External service port
    port: 3000
    # -- Service annotations
    annotations: {}

  # -- Configure additional ports to expose on the container and service
  additionalPorts: []
  # - name: metrics
  #   port: 9090
  #   containerPort: 9090
  #   protocol: TCP

  # Ingress configuration
  ingress:
    # -- Enable or disable ingress
    enabled: false
    # -- Ingress class name
    className: ""
    # -- Ingress annotations
    annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # -- List of hostnames and paths for ingress rules. The first host will be used as the default host.
    hosts: []
    # - host: chart-example.local
    #   paths:
    #     - path: /
    #       pathType: ImplementationSpecific
    # -- TLS settings for ingress
    tls: []
    # - hosts:
    #     - chart-example.local
    #   secretName: chart-example-tls

  # -- Configure init containers to run before the main container
  initContainers: []
  # - name: sleeper
  #   image: busybox
  #   args:
  #     - sleep
  #     - "10"

  # -- Configure resource requests and limits for the container
  resources: {}
  ## It is recommended to set resources explicitly in production environments.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

  # Liveness probe to check if the container is alive
  livenessProbe:
    # -- Http GET request to check if the container is alive
    httpGet:
      # -- Path to check
      path: /api/health
      # -- Port to check
      port: http
    # -- Initial delay before the first probe
    initialDelaySeconds: 20
    # -- Frequency of the probe
    periodSeconds: 10
    # -- Number of consecutive failures before marking the container as unhealthy
    failureThreshold: 5

  # Readiness probe to check if the container is ready to serve traffic
  readinessProbe:
    # -- Http GET request to check if the container is ready
    httpGet:
      # -- Path to check
      path: /api/health
      # -- Port to check
      port: http
    # -- Initial delay before the first probe
    initialDelaySeconds: 20
    # -- Frequency of the probe
    periodSeconds: 10
    # -- Number of consecutive failures before marking the container as not ready
    failureThreshold: 5

  # Startup probe to check if the container has started successfully
  startupProbe:
    # -- Http GET request to check if the container has started
    httpGet:
      # -- Path to check
      path: /api/health
      # -- Port to check
      port: http
    # -- Number of seconds to wait before starting the probe
    failureThreshold: 30
    # -- Initial delay before the first probe
    periodSeconds: 30

  # -- Define additional volumes
  # See: https://kubernetes.io/docs/concepts/storage/volumes/
  extraVolumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # -- Define volume mounts for the container
  # See: https://kubernetes.io/docs/concepts/storage/volumes/
  extraVolumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  # Pod Disruption Budget configuration
  podDisruptionBudget:
    # -- Enable Pod Disruption Budget
    enabled: true
    # -- Minimum number of pods that must be available
    minAvailable: 1
    # -- Maximum number of pods that can be unavailable
    maxUnavailable: 1

  # -- Add annotations to the pod metadata
  podAnnotations: {}
  # prometheus.io/scrape: "true"
  # prometheus.io/path: "/metrics"
  # prometheus.io/port: "9102"

  # -- Add extra labels to all resources
  additionalLabels: {}
  # team: sourcebot

  # -- Set node selector constraints
  # See: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector
  nodeSelector: {}

  # -- Set tolerations for pod scheduling
  # See: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
  tolerations: []
  # - effect: NoSchedule
  #   key: "key"
  #   operator: Equal
  #   value: "value"

  # -- Set affinity rules for pod scheduling
  # Defaults to soft anti-affinity if not set
  # See: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  affinity: {}

  # -- Set the priority class name for pods
  # See: https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/
  priorityClassName: ""

  # Persistent storage configuration
  persistence:
    # -- Enable persistent storage for repository data and search indexes
    enabled: true
    # -- Use an existing PersistentVolumeClaim (if set, other persistence settings are ignored)
    existingClaim: ""
    # -- Size of the persistent volume
    size: 10Gi
    # -- Storage class name. If not set, uses the cluster default storage class
    storageClass: ""
    # -- Access modes for the persistent volume
    accessModes:
      - ReadWriteOnce
    # -- Annotations for the PersistentVolumeClaim
    annotations: {}

# PostgreSQL Configuration
postgresql:
  # -- Deploy PostgreSQL subchart. Set to false to use an external PostgreSQL instance.
  deploy: true

  # -- PostgreSQL host (only used if deploy is false)
  host: ""
  # -- PostgreSQL port
  port: 5432

  image:
    # -- Overwrite default repository of helm chart to point to non-paid bitnami images
    repository: bitnamilegacy/postgresql

  # Authentication configuration
  auth:
    # -- Username to connect to PostgreSQL
    username: sourcebot
    # -- Password for PostgreSQL user (only used if existingSecret is not set)
    password: ""
    # -- Use an existing secret for PostgreSQL password
    existingSecret: ""
    # -- Keys in the existing secret
    secretKeys:
      userPasswordKey: postgresql-password
      adminPasswordKey: postgresql-password
    # -- Database name
    database: sourcebot
    # -- Additional database connection arguments
    args: ""

  # Subchart specific settings (only applies when deploy is true)
  primary:
    persistence:
      enabled: true
      size: 8Gi

# Redis Configuration
redis:
  # -- Deploy Redis/Valkey subchart. Set to false to use an external Redis instance.
  deploy: true

  # -- Redis host (only used if deploy is false)
  host: ""
  # -- Redis port
  port: 6379

  image:
    # -- Overwrite default repository of helm chart to point to non-paid bitnami images
    repository: bitnamilegacy/valkey

  # Authentication configuration
  auth:
    # -- Username for Redis connection
    username: "default"
    # -- Password for Redis user (only used if existingSecret is not set)
    password: ""
    # -- Use an existing secret for Redis password
    existingSecret: ""
    # -- Key in the existing secret that contains the Redis password
    existingSecretPasswordKey: redis-password
    # -- Redis database number
    database: 0
